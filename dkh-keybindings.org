#+TITLE: E-Wax Bindings
#+OPTIONS: toc:nil num:nil ^:nil

This is part of the [[file:dkh-core.org][E-Wax Starter Kit Instance]].

#+begin_quote

“A gentleman armed with my invention can keep a dozen ruffians at bay.”

/Samuel Colt/

#+end_quote



#+begin_src emacs-lisp 


(global-set-key (kbd "<H-down>") 'shrink-window)
(global-set-key (kbd "<H-left>") 'shrink-window-horizontally)
(global-set-key (kbd "<H-right>") 'enlarge-window-horizontally)
(global-set-key (kbd "<H-up>") 'enlarge-window)
(global-set-key (kbd "<s-down>") 'forward-close-bracket)
(global-set-key (kbd "<s-left>") 'backward-open-bracket)
(global-set-key (kbd "<s-right>") 'forward-open-bracket)
(global-set-key (kbd "<s-up>") 'backward-close-bracket)
(global-set-key (kbd "C-H-g") (lambda () (interactive) (switch-or-start 'gnus "*Group*")))
(global-set-key (kbd "C-H-l")  'duplicate-line-or-region)

(global-set-key (kbd "C-c 0") 'bh/switch-to-scratch)
(global-set-key (kbd "C-c 1")  (lambda () (interactive) (switch-to-buffer-other-window "*Org Agenda*")))
(global-set-key (kbd "C-c A") '(lambda () (interactive) (bookmark-jump "appointments")))
(global-set-key (kbd "C-c C") (lambda () (interactive) (switch-or-start 'calendar "*Calendar*")))
(global-set-key (kbd "C-c F")  'find-grep-dired)
(global-set-key (kbd "C-c G") 'my-gnus)
(global-set-key (kbd "C-c H") '(lambda () (interactive) (bookmark-jump "habits")))
(global-set-key (kbd "C-c I") '(lambda () (interactive) (bookmark-jump "interfaces")))
(global-set-key (kbd "C-c M") '(lambda () (interactive) (bookmark-jump "misc")))
(global-set-key (kbd "C-c N") 'next-buffer)
(global-set-key (kbd "C-c P") 'previous-buffer)
(global-set-key (kbd "C-c R") '(lambda () (interactive) (bookmark-jump "records")))
(global-set-key (kbd "C-c Y")  'wg-banish-buffer)
(global-set-key (kbd "C-c g") 'magit-status)
(global-set-key (kbd "C-c h") 'rgr/toggle-context-help)
(global-set-key (kbd "C-c j") 'bookmark-jump)
(global-set-key (kbd "C-c y")  'wg-bury-buffer)
(global-set-key (kbd "C-c z")  'org-table-insert-column)

(global-set-key (kbd "C-x <f10>") 'dkh-eshell-macs)
(global-set-key (kbd "C-x <f5>") 'repeat-complex-command)
(global-set-key (kbd "C-x M") 'dkh-shell-with-name)
(global-set-key (kbd "C-x M-m") 'shell)
(global-set-key (kbd "C-x S") 'shell)
(global-set-key (kbd "C-x T") 'ido-find-file-in-tag-files)
(global-set-key (kbd "C-x c") 'eval-region)

#+end_src 


* Drupal and PHP

#+begin_src emacs-lisp 

(global-set-key (kbd "C-x g D") 'my-drupal-module-lookup)
(global-set-key (kbd "C-x g P") 'my-php-symbol-lookup)
(global-set-key (kbd "C-x g b") 'php-browse-manual)
(global-set-key (kbd "C-x g d") 'my-drupal-symbol-lookup)
(global-set-key (kbd "C-x g p") 'my-php-function-lookup) ;; also F1
(global-set-key (kbd "C-x g s") 'php-search-documentation)


#+end_src 

* Mo keybinding

#+begin_src emacs-lisp 

(global-set-key (kbd "C-x k") #'(lambda () (interactive)
          (kill-buffer (current-buffer))))


(global-set-key (kbd "H-'") 'windmove-left)
(global-set-key (kbd "H-.") 'etags-select-find-tag)
(global-set-key (kbd "H-/") 'windmove-down)
(global-set-key (kbd "H-1") 'delete-other-windows)
(global-set-key (kbd "H-;") 'windmove-right)
(global-set-key (kbd "H-<backspace>") 'scroll-down-command)
(global-set-key (kbd "H-@")   'mark-sexp)
(global-set-key (kbd "H-A") 'append-to-buffer)
(global-set-key (kbd "H-I") 'rgr/ido-erc-buffer)
(global-set-key (kbd "H-S")   'synonyms)
(global-set-key (kbd "H-[") 'windmove-up)
(global-set-key (kbd "H-\"") 'dkh/select_q_string_region)
(global-set-key (kbd "H-\\") 'my-toggle-window-split)
(global-set-key (kbd "H-a")         'answers-define)
(global-set-key (kbd "H-b") 'dkh/byte-compile-file)
(global-set-key (kbd "H-c") 'ffap-copy-string-as-kill)
(global-set-key (kbd "H-d") 'my-dictem-run-search)
(global-set-key (kbd "H-e") 'grab-email-my)
(global-set-key (kbd "H-g") 'rgr/google-search-prompt)
(global-set-key (kbd "H-h") 'rgr/toggle-context-help)
(global-set-key (kbd "H-i") 'ispell-word)
(global-set-key (kbd "H-k") 'call-last-kbd-macro)
(global-set-key (kbd "H-l")  'select-current-line)
(global-set-key (kbd "H-m") 'sql-connect)
(global-set-key (kbd "H-p") 'proced)
(global-set-key (kbd "H-q") 'dkh/bbdb-name)
(global-set-key (kbd "H-r") 'winner-redo) ;; C-c <right>
(global-set-key (kbd "H-s") 'ash-kill-string)
(global-set-key (kbd "H-t") 'transpose-lines)
(global-set-key (kbd "H-u") 'grab-url-at-point-my)
(global-set-key (kbd "H-v") 'scroll-other-window)
(global-set-key (kbd "H-w")         (quote copy-word)) ;; from dkh-copy.org
(global-set-key (kbd "H-z") 'winner-undo) ;; C-c <left>
(global-set-key (kbd "H-|") 'my-swap-windows)

(global-set-key [?\C-c ?u] 'ucase_between_quotes)
(global-set-key [?\C-x ?t] 'translate)
(global-set-key [?\C-x ?u] 'join-line)




(message "0 dkh-bindings... Done")


#+end_src 

* jwiegley inspired keybinding

#+begin_src emacs-lisp 

;; (bind-key "M-!" 'async-shell-command)
;; (bind-key "M-/" 'dabbrev-expand)
;; (bind-key "M-'" 'insert-pair)
(bind-key "M-\"" 'insert-pair)

(bind-key "M-[" 'align-code)

;; I don't really use frames
;;(bind-key "M-`" 'other-frame)

;;(bind-key "M-j" 'delete-indentation-forward)
(bind-key "H-j" 'delete-indentation-forward)
(bind-key "M-J" 'delete-indentation)

(bind-key "M-W" 'mark-word)

(bind-key "M-L" 'mark-line)

(bind-key "M-S" 'mark-sentence)

(bind-key "M-X" 'mark-sexp)

;;(bind-key "M-H" 'mark-paragraph)

(bind-key "M-D" 'mark-defun)

(bind-key "M-g c" 'goto-char)
(bind-key "M-g l" 'goto-line)

(bind-key "M-s n" 'find-name-dired)
;;(bind-key "M-s o" 'occur)

;;(bind-key "A-M-w" 'copy-code-as-rtf)

;;(bind-key "<C-M-backspace>" 'backward-kill-sexp)

(bind-key "C-M-r" 'isearch-backward-other-window)

(bind-key "C-M-S" 'isearch-forward-other-window)

;; Some further isearch bindings
;;(bind-key "C-c" 'isearch-toggle-case-fold isearch-mode-map)
;;(bind-key "C-t" 'isearch-toggle-regexp isearch-mode-map)
;;(bind-key "C-^" 'isearch-edit-string isearch-mode-map)
;;(bind-key "C-i" 'isearch-complete isearch-mode-map)


;;(bind-key "C-x d" 'delete-whitespace-rectangle)
;;(bind-key "C-x F" 'set-fill-column)
;;(bind-key "C-x t" 'toggle-truncate-lines)


;;(bind-key "C-x C-d" 'duplicate-line)
;;(bind-key "C-x C-e" 'pp-eval-last-sexp)
;;(bind-key "C-x C-n" 'next-line)

(bind-key "C-x M-q" 'refill-paragraph)

(bind-key "C-c <tab>" 'ff-find-other-file)

;;(bind-key "C-c SPC" 'just-one-space)


(bind-key "C-c d" 'delete-current-line)

(bind-key "C-c e E" 'elint-current-buffer)

(bind-key "C-c e b" 'do-eval-buffer)

(bind-key "C-c e c" 'cancel-debug-on-entry)

(bind-key "C-c e d" 'debug-on-entry)
(bind-key "C-c e e" 'toggle-debug-on-error)
(bind-key "C-c e f" 'emacs-lisp-byte-compile-and-load)
(bind-key "C-c e l" 'find-library)
(bind-key "C-c e r" 'eval-region)
(bind-key "C-c e s" 'scratch)
(bind-key "C-c e v" 'edit-variable)

(bind-key "C-c e w" 'find-which)
(bind-key "C-c e z" 'byte-recompile-directory)

(bind-key "C-c f" 'flush-lines)
;;(bind-key "C-c g" 'goto-line)

(bind-key "C-c K" 'keep-lines)



(bind-key "C-h e c" 'finder-commentary)
(bind-key "C-h e e" 'view-echo-area-messages)
(bind-key "C-h e f" 'find-function)
(bind-key "C-h e F" 'find-face-definition)

(bind-key "C-h e d" 'my-describe-symbol)
(bind-key "C-h e i" 'info-apropos)
(bind-key "C-h e k" 'find-function-on-key)
(bind-key "C-h e l" 'find-library)

(bind-key "C-h e s" 'scratch)
(bind-key "C-h e v" 'find-variable)
(bind-key "C-h e V" 'apropos-value)

#+end_src 
